---
- name: Configure td-agent-bit
  block:
    - name: Ensure Conf Dir Exists
      become: true
      file:
        path: "{{ flb_conf_dir }}"
        state: directory
        mode: 0644
    - name: Template Out td-agent-bit.conf
      become: true
      template:
        owner: root
        group: root
        mode: 0644
        src: td-agent-bit.conf.j2
        dest: "{{ flb_conf_dir }}/{{ flb_conf_file }}"
      notify: Restart td-agent-bit
    - name: Create Custom Includes Dir
      become: true
      file:
        path: "{{ flb_conf_dir }}/includes"
        state: directory
        mode: 0644
    - name: Create Custom Parsers Dir
      become: true
      file:
        path: "{{ flb_conf_dir }}/parsers.d"
        state: directory
        mode: 0644
    - name: Ensure Buffer Dir Exists
      become: true
      file:
        path: "{{ tail_input.state_db }}"
        state: directory
        mode: 0644
    - name: Template out Custom td-agent-bit Includes
      template:
        src: '{{ item }}'
        dest: '{{ flb_conf_dir }}/includes/{{ (item | basename).split(".j2")[0] }}'
        mode: 0644
      with_items: '{{ flb_includes }}'
      when:
        - flb_includes is defined
        - flb_includes | length >0
      notify: Restart td-agent-bit
    - name: Template out Custom td-agent-bit Parsers
      template:
        src: '{{ item }}'
        dest: '{{ flb_conf_dir }}/parsers/{{ (item | basename).split(".j2")[0] }}'
        mode: 0644
      with_items: '{{ flb_custom_parsers }}'
      when:
        - flb_custom_parsers is defined
        - flb_custom_parsers | length >0
      notify: Restart td-agent-bit
- name: Check for logrotate Duplicates
  become: true
  shell: >-
    set -o pipefail;
    for file in $( ls -d {{ flb_logrotate_conf_dir | quote }}* | grep -v "{{ flb_logrotate_prefix | quote }}");
    do cat $file | grep -v '^#' | tr '\n' " " | sed 's;\([^{]*\){.*;\1;' | sed 's;  [ ]*; ;gm' |
    tr " " "\n" | tr -d \" | grep "/"; done
  register: logrotate_watched_files
  changed_when: logrotate_watched_files.rc == 0
- name: Warn about duplicate logrotates
  when:
    - flb_inputs.files is defined and flb_inputs.files|length > 0
    - ( flb_rotate_enabled | default(false)) or ( item.rotate_enabled is defined and item.rotate_enabled is true )
    - ( item.rotate_enabled is not defined or item.rotate_enabled is true )
    - item.path in ( logrotate_watched_files.stdout_lines | list )
  fail:
    msg: >-
      Role detected that file input for \"{{ item.path }}\" is already being rotated by
      another logrotate script. Automatic logrotate will not be configured for this input!
  with_items: '{{ flb_inputs.files }}'
  ignore_errors: yes
- name: Configure logrotate
  when:
    - flb_inputs.files is defined and flb_inputs.files|length > 0
    - ( flb_rotate_enabled | default(false)) or ( item.rotate_enabled is defined and item.rotate_enabled is true )
    - ( item.rotate_enabled is not defined or item.rotate_enabled is true )
    - item.path not in ( logrotate_watched_files.stdout_lines | list )
  become: true
  template:
    src: logrotate.d.j2
    dest: "{{ flb_logrotate_conf_dir }}/{{ flb_logrotate_prefix }}{{ item.path | basename }}"
  with_items: "{{ flb_inputs.files }}"