# {{ansible_managed}}
#### BEGIN SERVICE CONFIG ####
[SERVICE]
    Flush               {{ flb_svc_flush }}
    Daemon              {{ (flb_svc_daemon | bool) | ternary('On', 'Off' ) }}
    Log_Level           {{ flb_svc_log_level }}
    Parsers_File        parsers.conf
    Plugins_File        plugins.conf
{% if flb_custom_parsers is defined and ( flb_custom_parsers | length > 0 ) %}
#### SERVICE CONFIG     => BEGIN CUSTOM PARSERS ####
{% for item in flb_custom_parsers %}
    Parsers_File        {{ flb_parsers_dir }}/{{ (item | basename).split(".j2")[0] }}
{% endfor %}
#### SERVICE CONFIG     => END CUSTOM PARSERS   ####
{% endif %}

#### SERVICE CONFIG     => BEGIN METRICS CONFIG ####
    HTTP_Server         {{ (flb_metrics_enable | bool) | ternary('On', 'Off') }}
{% if  (flb_metrics_enable | bool) %}
{% if ansible_default_ipv4["address"] | ipaddr('private') %}
    HTTP_Listen         {{ ansible_default_ipv4["address"] | ipaddr('private') }}
{% elif flb_metrics_bind_cidr is defined %}
    HTTP_Listen         {{ ansible_all_ipv4_addresses | ipaddr('private') | ipaddr(flb_metrics_bind_cidr) | first }}
{% endif %}
    HTTP_Port           {{ flb_metrics_bind_port }}
{% endif %}
#### SERVICE CONFIG     => END METRICS CONFIG  ####
#### END SERVICE CONFIG   ####
{% if flb_inputs.files is defined and ( flb_inputs.files | length > 0 ) %}

#### BEGIN FILE INPUTS ####
{% for item in flb_inputs.files %}
[INPUT]
    Name                tail
    Path                {{ item.path }}
    Buffer_Chunk_Size   {{ item.buffer_chunk_sz | default(tail_input.buffer_chunk_sz) }}
    Buffer_Max_Size     {{ item.buffer_max_sz | default(tail_input.buffer_max_sz) }}
    DB                  {{ item.state_db | default( tail_input.state_db + '/' + (( item.path | basename | splitext)[0] | replace('*', '_all_' ))  + '.state' )}}
    DB.Sync             {{ item.state_db_sync | default( tail_input.state_db_sync )}}
    Mem_Buf_Limit       {{ item.mem_max_sz | default( tail_input.mem_max_sz )}}
{% if item.exclude_path is defined or tail_input.exclude_path is defined %}
    Exclude_Path        {{ item.exclude_path | default(tail_input.exclude_path) }}
{% endif %}
{% if item.parser is defined %}
    Parser              {{ item.parser }}
{% endif %}
{% if item.tag is defined %}
    Tag                 {{ item.tag }}
{% endif %}
{% endfor %}
#### END FILE INPUTS  ####
{% endif %}
{% if ansible_service_mgr == "systemd" %}
{% if flb_inputs.services is defined and ( flb_inputs.services | length > 0 ) %}

#### BEGIN SERVICE INPUTS ####
{% for item in flb_inputs.services %}
[INPUT]
    Name                systemd
    Read_From_Tail      true
    Strip_Underscores   true
    Systemd_Filter      _SYSTEMD_UNIT={{ item }}.service
    Tag                 {{ ansible_hostname }}::*
{% endfor %}
#### END SERVICE INPUTS   ####
{% endif %}
{% endif %}
{% if flb_inputs.custom is defined and ( flb_inputs.custom | length > 0 ) %}

#### BEGIN CUSTOM INPUTS ####
{% for input in flb_inputs.custom %}
[INPUT]
{% for key in input %}
    {{ "%-20s" | format(key,) }}{{ input[key] }}
{% endfor %}
{% endfor %}
#### END CUSTOM INPUTS  ####
{% endif %}
{% if flb_filters is defined and ( flb_filters | length > 0 ) %}

#### BEGIN CUSTOM FILTERS ####
{% for flb_filter in flb_filters %}
[FILTER]
{% for key in flb_filter %}
{% if flb_filter[key] is not string and flb_filter[key] is not number %}
{% for repeating_key_item in flb_filter[key] %}
    {{ "%-20s" | format(key,) }}{{ repeating_key_item }}
{% endfor %}
{% else %}
    {{ "%-20s" | format(key,) }}{{ flb_filter[key] }}
{% endif %}
{% endfor %}
{% endfor %}
#### END CUSTOM FILTERS  ####
{% endif %}
{% if flb_lua_filters is defined and ( flb_lua_filters | length > 0 ) %}

#### BEGIN CUSTOM LUA FILTERS ####
{% for script in flb_lua_filters %}
{% for lua_filter in flb_lua_filters[script] %}
[FILTER]
    Name                  lua
    Match                 {{ (lookup('dict', lua_filter)).key }}
    script                {{ flb_filters_dir }}/{{ ( script | basename ).split(".j2")[0] }}
    call                  {{ (lookup('dict', lua_filter)).value }}
{% endfor %}
{% endfor %}
#### END CUSTOM LUA FILTERS  ####
{% endif %}
{% if flb_outputs is defined and ( flb_outputs | length > 0 )%}

#### BEGIN OUTPUTS ####
{% for output in flb_outputs %}
[OUTPUT]
{% for key in output %}
    {{ "%-20s" | format(key,) }}{{ output[key] }}
{% endfor %}
{% endfor %}
#### END OUTPUTS  ####
{% endif %}
{% if flb_includes is defined and ( flb_includes | length > 0 )%}

#### BEGIN CUSTOM INCLUDES ####
{% for item in flb_includes %}
@INCLUDE                {{ flb_includes_dir }}/{{ (item | basename).split(".j2")[0] }}
{% endfor %}
#### END CUSTOM INCLUDES  ####
{% endif %}

